using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Photon.Pun;
using UnityEngine.UI;

public class JewelThief : MonoBehaviourPunCallbacks
{
    private GameObject player;//自身
    CharacterItems characterItems;
    bool isClicked;
    [SerializeField]
    GameObject bagButton;
    [SerializeField]
    GameObject bagPanel;
    GameObject curPlayer;
    ToolSound toolSound;
    //public Text SliderText;
    public Text K1;
    public Text K2;
    public Text K3;
    string Playername;
    string Targetname;
    GameObject k1;
    GameObject k2;
    GameObject k3;
    Killfeed killfeed;
    GameObject achieve;
    [SerializeField]
    ToolMenuControl toolMenuControl;
    private void Start()
    {
        curPlayer = GameObject.Find("Player(Clone)");
        characterItems = curPlayer.GetComponent<CharacterItems>();
        player = curPlayer;
        isClicked = false;//设置为点击玩家进行偷窃
        toolSound = curPlayer.GetComponent<ToolSound>();
        //SliderText = GameObject.Find("Canvas/slider/SliderImage/SliderText").GetComponent<Text>();
        K1 = GameObject.Find("Canvas/Killfeed/K1/Text").GetComponent<Text>();
        K2 = GameObject.Find("Canvas/Killfeed/K2/Text").GetComponent<Text>();
        K3 = GameObject.Find("Canvas/Killfeed/K3/Text").GetComponent<Text>();
        Playername = curPlayer.GetComponent<CharacterStatus>().username;
        k1 = GameObject.Find("Canvas/Killfeed/K1");
        k2 = GameObject.Find("Canvas/Killfeed/K2");
        k3 = GameObject.Find("Canvas/Killfeed/K3");
        killfeed = GameObject.Find("Canvas").GetComponent<Killfeed>();
        achieve = GameObject.Find("AchievementManager");
    }

    private void Update()
    {
        if (isClicked && Input.GetMouseButtonDown(0))
        {
            jewelThiefEvent();
            isClicked = false;
        }
    }

    public void onClicked()
    {
        if (characterItems.getJewelThief() == 0)
        {
            //之后加一个文字提示
            return;
        }
        isClicked = true;
        bagButton.SetActive(true);
        bagPanel.SetActive(false);
    }

    private void jewelThiefEvent()
    {
        Debug.Log("my jewel " + characterItems.getJewel());
        RaycastHit hit;
        if (Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), out hit, 100f)) //作用距离为5.0f
        {
            if (hit.transform)
            {
                if (hit.transform.gameObject.tag == "Player")
                {
                    Targetname = hit.transform.gameObject.GetComponent<CharacterStatus>().username;
                    PhotonView.RPC("showJewelTips", RpcTarget.All, Playername,Targetname);
                    toolSound.Steal(curPlayer.GetComponent<PhotonView>().ViewID);
                    PhotonView.RPC("showJewelEffect", RpcTarget.MasterClient, curPlayer.transform.position, curPlayer.GetComponent<CapsuleCollider>().center, curPlayer.transform.localScale.y);
                    //Debug.Log("wodeid " + hit.transform.gameObject.GetComponent<PhotonView>().ViewID);
                    //Debug.Log("his jewel " + PhotonView.Find(hit.transform.gameObject.GetComponent<PhotonView>().ViewID).GetComponent<CharacterItems>().getJewel());
                    PhotonView.RPC("useJewelThief", RpcTarget.Others, hit.transform.gameObject.GetComponent<PhotonView>().ViewID);
                    achieve.GetComponent<SimpleAchievements.Main.AchievementsControl>().AddProgressAchievementByID(4, 1);
                    characterItems.changeJewelThief(-1);
                    toolMenuControl.transparent();
                }
            }
        }
    }

    [PunRPC]
    public void useJewelThief(int viewID)
    {
        //int totalJewelNum = 3;//假设一共有三种宝石
        //int index = Random.Range(0, totalJewelNum);//随机指定偷取某种颜色的宝石

        int p1 = Random.Range(0, 100);
        int num = Random.Range(0, 3);
        //int p2 = Random.Range(0, 100);
        //int jewelNum = PhotonView.Find(viewID).getJewelNum(index);
        int jewelNum = PhotonView.Find(viewID).GetComponent<Gem>().gemA + PhotonView.Find(viewID).GetComponent<Gem>().gemB + PhotonView.Find(viewID).GetComponent<Gem>().gemC + PhotonView.Find(viewID).GetComponent<Gem>().gemD;

        if (jewelNum > 0)//可以被偷
        {
            Debug.Log("keyitoua");
            if (50 <= p1)//偷成功的概率设置为大于一半
            {
                if(num == 0 && PhotonView.Find(viewID).GetComponent<Gem>().gemA > 0)
                {
                    PhotonView.Find(viewID).GetComponent<Gem>().changeA(-1);
                    curPlayer.GetComponent<Gem>().changeA(1);
                }
                else if (num == 1 && PhotonView.Find(viewID).GetComponent<Gem>().gemB > 0)
                {
                    PhotonView.Find(viewID).GetComponent<Gem>().changeB(-1);
                    curPlayer.GetComponent<Gem>().changeB(1);
                }
                else if (num == 2 && PhotonView.Find(viewID).GetComponent<Gem>().gemC > 0)
                {
                    PhotonView.Find(viewID).GetComponent<Gem>().changeC(-1);
                    curPlayer.GetComponent<Gem>().changeC(1);
                }
                else if (num == 3 && PhotonView.Find(viewID).GetComponent<Gem>().gemD > 0)
                {
                    PhotonView.Find(viewID).GetComponent<Gem>().changeD(-1);
                    curPlayer.GetComponent<Gem>().changeD(1);
                }
                //PhotonView.Find(viewID).changeJewel(index, -1);
                //PhotonView.Find(viewID).GetComponent<CharacterItems>().changeJewel(-1);
                //Debug.Log("his jewel " + PhotonView.Find(viewID).GetComponent<CharacterItems>().getJewel());
                //characterItems.changeJewel(index,1);
                //characterItems.changeJewel(1);
                //己方文字提示“偷取成功！”
                //对方文字提示“您的宝石被偷了！”
            }
        }
    }

    [PunRPC]
    public void showJewelEffect(Vector3 position, Vector3 center, float scale)
    {
        Vector3 centerPos = position + center * scale * 1.5f;
        PhotonNetwork.Instantiate("Effects/JewelEffect", centerPos, Quaternion.identity, 0);
    }

    [PunRPC]
    public void showJewelTips(string user,string target)
    {
        if (killfeed.textcount == 0)
        {
            k1.SetActive(true);
        }
        else if (killfeed.textcount == 1)
        {
            k2.SetActive(true);
        }
        else if (killfeed.textcount == 2)
        {
            k3.SetActive(true);
        }
        if (K1.text == "")
        {
            K1.text = "<i>" + user + "</i> 对 <i>" + target + "</i> 使用了 <color=#73ccd5ff>宝石大盗</color> ";
        }
        else if (K2.text == "")
        {
            K2.text = "<i>" + user + "</i> 对 <i>" + target + "</i> 使用了 <color=#73ccd5ff>宝石大盗</color> ";
        }
        else if (K3.text == "")
        {
            K3.text = "<i>" + user + "</i> 对 <i>" + target + "</i> 使用了 <color=#73ccd5ff>宝石大盗</color> ";
        }
        else
        {
            K1.text = K2.text;
            K2.text = K3.text;
            K3.text = "<i>" + user + "</i> 对 <i>" + target + "</i> 使用了 <color=#73ccd5ff>宝石大盗</color> ";
        }
        killfeed.textcount++;
    }
}
