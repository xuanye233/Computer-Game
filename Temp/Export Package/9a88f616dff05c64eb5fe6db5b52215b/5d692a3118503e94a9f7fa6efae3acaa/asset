using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Photon.Pun;
using UnityEngine.UI;

public class Teleportation : MonoBehaviourPunCallbacks
{
    // 互换位置
    Vector3 myPosition;
    Vector3 othersPosition;
    GameObject curPlayer;
    ToolSound toolSound;
    CharacterItems characterItems;
    bool isClicked;
    [SerializeField]
    GameObject bagButton;
    [SerializeField]
    GameObject bagPanel;
    public Text K1;
    public Text K2;
    public Text K3;
    string Playername;
    GameObject k1;
    GameObject k2;
    GameObject k3;
    Killfeed killfeed;
    GameObject achieve;
    //public Text SliderText;
    [SerializeField]
    ToolMenuControl toolMenuControl;
    void Awake()
    {
        curPlayer = GameObject.Find("Player(Clone)");
        toolSound = curPlayer.GetComponent<ToolSound>();
        characterItems = curPlayer.GetComponent<CharacterItems>();
        isClicked = false;
        K1 = GameObject.Find("Canvas/Killfeed/K1/Text").GetComponent<Text>();
        K2 = GameObject.Find("Canvas/Killfeed/K2/Text").GetComponent<Text>();
        K3 = GameObject.Find("Canvas/Killfeed/K3/Text").GetComponent<Text>();
        Playername = curPlayer.GetComponent<CharacterStatus>().username;
        k1 = GameObject.Find("Canvas/Killfeed/K1");
        k2 = GameObject.Find("Canvas/Killfeed/K2");
        k3 = GameObject.Find("Canvas/Killfeed/K3");
        killfeed = GameObject.Find("Canvas").GetComponent<Killfeed>();
        achieve = GameObject.Find("AchievementManager");
        //SliderText = GameObject.Find("Canvas/slider/SliderImage/SliderText").GetComponent<Text>();
    }

    private void Update()
    {
        if(isClicked && Input.GetMouseButtonDown(0))
        {
            TeleportationEvent();
        }
    }

    // Update is called once per frame
    public void onClicked()
    {
        if(characterItems.getTeleportation() == 0)
        {
            return;
        }
        isClicked = true;
    }

    private void TeleportationEvent()
    {
        Debug.Log("click");
        RaycastHit hit;
        if (Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), out hit, 100f)) //作用距离为5.0f
        {
            if (hit.transform)
            {
                if (hit.transform.gameObject.tag == "Player")
                {
                    //othersPosition = hit.transform.position;
                    //myPosition = transform.position;
                    //hit.transform.transform.position = myPosition;
                    //transform.position = othersPosition;
                    toolSound.Teleport(curPlayer.GetComponent<PhotonView>().ViewID);
                    toolSound.Teleport(hit.transform.gameObject.GetComponent<PhotonView>().ViewID);
                    PhotonView.RPC("showTeleEffect", RpcTarget.MasterClient, curPlayer.transform.position, curPlayer.GetComponent<CapsuleCollider>().center, curPlayer.transform.localScale.y);
                    PhotonView.RPC("showTeleTips", RpcTarget.All, Playername);
                    achieve.GetComponent<SimpleAchievements.Main.AchievementsControl>().AddProgressAchievementByID(9, 1);
                    Debug.Log("wodeid " + hit.transform.gameObject.GetComponent<PhotonView>().ViewID);

                    myPosition = curPlayer.transform.position;
                    curPlayer.transform.position = hit.transform.position;
                    PhotonView.RPC("changePosition", RpcTarget.Others, hit.transform.gameObject.GetComponent<PhotonView>().ViewID, myPosition);
                    characterItems.changeTeleportation(-1);

                    isClicked = false;
                    toolMenuControl.transparent();
                }
            }
        }
    }

    [PunRPC]
    public void changePosition(int viewID,Vector3 position)
    {
        PhotonView.Find(viewID).transform.position = position;
    }
   
    [PunRPC]
    public void showTeleEffect(Vector3 position, Vector3 center, float scale)
    {
        Vector3 centerPos = position + center * scale * 1.5f;
        PhotonNetwork.Instantiate("Effects/TeleEffect", centerPos, Quaternion.identity, 0);
    }

    [PunRPC]
    public void showTeleTips(string name)
    {
        if (killfeed.textcount == 0)
        {
            k1.SetActive(true);
        }
        else if (killfeed.textcount == 1)
        {
            k2.SetActive(true);
        }
        else if (killfeed.textcount == 2)
        {
            k3.SetActive(true);
        }
        if (K1.text == "")
        {
            K1.text = "<i>" + name + "</i> 使用了 <color=#73ccd5ff>移形换位</color> ";
        }
        else if (K2.text == "")
        {
            K2.text = "<i>" + name + "</i> 放置了 <color=#73ccd5ff>移形换位</color> ";
        }
        else if (K3.text == "")
        {
            K3.text = "<i>" + name + "</i> 放置了 <color=#73ccd5ff>移形换位</color> ";
        }
        else
        {
            K1.text = K2.text;
            K2.text = K3.text;
            K3.text = "<i>" + name + "</i> 放置了 <color=#73ccd5ff>移形换位</color> ";
        }
        killfeed.textcount++;
    }
}
